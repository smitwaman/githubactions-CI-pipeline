name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Adjust branch as needed
  pull_request:
    branches:
      - main  # Adjust branch as needed

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_NAME: helloworld-tomcat

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: SCM Checkout
      uses: actions/checkout@v2

    - name: Java Setup
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Maven Build
      run: mvn clean package

    - name: Selenium Test
      run: |
        # Add commands to run Selenium tests
        # e.g., mvn test

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    - name: SCM Checkout
      uses: actions/checkout@v2

    - name: Java Setup
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        distribution: 'default'  # Set the distribution input to 'default'

    - name: Login to Docker Registry
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Docker Build and Push
      run: |
        docker build -t ${{ env.IMAGE_NAME }} .
        docker tag ${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.IMAGE_NAME }}:latest
